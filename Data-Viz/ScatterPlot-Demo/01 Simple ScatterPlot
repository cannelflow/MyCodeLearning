//html file
<!DOCTYPE html>
<html>
<head>
    <title>D3-Zipline: GDP Bar Graph</title>
    <meta charset="utf-8" />
    <link href="../Content/bootstrap-theme.min.css" rel="stylesheet" />
    <link href="../Content/bootstrap.min.css" rel="stylesheet" />
    <script src="../Scripts/d3/d3.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3-tip/0.6.7/d3-tip.min.js"></script>
    <link href="demo.css" rel="stylesheet" />
</head>
<body>
   
    <script src="../Scripts/jquery-2.2.1.min.js"></script>
    <script src="../Scripts/bootstrap.min.js"></script>
    <script src="demo.js"></script>
</body>
</html>
//js file
//Create Data
var data = [[5, 3], [10, 17], [15, 4], [2, 8]];
//Create Margin Followed By Width And Height
var margin = { top: 20, right: 15, bottom: 60, left: 60 }
width = 960 - margin.left - margin.right;
height = 500 - margin.top - margin.bottom;
/*
   Define Scale Then Followed By Axis
*/
// Define X And Y Scales
var xScale = d3.scale.linear()
             .domain([0, d3.max(data, function (d) { return d[0]; })])
             .range([0, width]);

var yScale = d3.scale.linear()
          .domain([0,d3.max(data, function (d) { return d[1]; })])
          .range([height, 0]);
// Define X And Y Axis
var xAxis = d3.svg.axis().
       scale(xScale).
       orient("bottom");
/*
  Create SVG Element Then Append Height And Width And g Which Act As a Container
*/
var svg = d3.select("body").
    append("svg").
    attr({
          "width": width + margin.right + margin.left,
          "height": height + margin.top + margin.bottom
      }).
    append("g").
      attr("transform", "translate(" + margin.left + "," + margin.right + ")");
/*
create circle or bind data
*/
//bind data
svg.selectAll("circle")
  .data(data)
//enter data
.enter().
    append("circle")
//update data
  .attr("cx", function (d, i) { return xScale(d[0]); })
  .attr("cy", function (d) { return yScale(d[1]); })
  .attr("r", 8);
//Call xAxis
svg.append('g')
   .attr('transform', 'translate(0,' + height + ')')
   .attr('class', 'main axis date')
   .call(xAxis);
var yAxis = d3.svg.axis().
    scale(yScale).
    orient("left");
//Call yAxis
svg.append('g')
  .attr('transform', 'translate(0,0)')
  .attr('class', 'main axis date')
  .call(yAxis);
//css file

svg {
  
  margin-top:20px;
  margin-left: auto;
  margin-right: auto;
  display: block;
  background-color:antiquewhite;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}
.bar {
  fill: orange;
}

.bar:hover {
  fill: orangered ;
}
