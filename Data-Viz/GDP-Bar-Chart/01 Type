//html file
<!DOCTYPE html>
<html>
<head>
    <title>D3 Tutorial Demo</title>
    <meta charset="utf-8" />
    <link href="../Content/bootstrap-theme.min.css" rel="stylesheet" />
    <link href="../Content/bootstrap.min.css" rel="stylesheet" />
    <script src="../Scripts/d3/d3.min.js"></script>
    <link href="demo.css" rel="stylesheet" />
</head>
<body>
    
    <div class="container-fluid text-center">
        <h1>Bar Graph - 2015 GDP Based On PPP Valuation</h1>
    </div>
    <script src="../Scripts/jquery-2.2.1.min.js"></script>
    <script src="../Scripts/bootstrap.min.js"></script>
    <script src="demo.js"></script>
</body>
</html>
//
//Create Margin 
var margin = { top: 20, right: 10, bottom: 100, left: 50 },
    width = 710 - margin.right - margin.left,
    height = 500 - margin.top - margin.bottom;
/*
create svg element then append height and width and g
*/
var svg = d3.select("body")
    .append("svg")
      .attr({
          "width": width + margin.right + margin.left,
          "height": height + margin.top + margin.bottom
      })
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.right + ")");
/*
create scale then followed by axis
*/
// define x and y scales
var xScale = d3.scale.ordinal()
    .rangeRoundBands([0, width], 0.2, 0.2);
var yScale = d3.scale.linear()
    .range([height, 0]);
// define x axis and y axis
var xAxis = d3.svg.axis()
    .scale(xScale)
    .orient("bottom");
var yAxis = d3.svg.axis()
    .scale(yScale)
    .orient("left");
/*
fethch data from csv file 
*/
d3.csv("data.csv", function (error, data) {
    if (error) console.log("Error: data not loaded!");
    data.forEach(function (d) {
        d.country = d.country;
        d.gdp = +d.gdp;       
        console.log(d.gdp);   
    });
    // sort the gdp values
    data.sort(function (a, b) {
        return b.gdp - a.gdp;
    });

    // Specify the domains of the x and y scales
    xScale.domain(data.map(function (d) { return d.country; }));
    yScale.domain([0, d3.max(data, function (d) { return d.gdp; })]);

 var rect = svg.selectAll('rect')
      .data(data)
      .enter()
      .append('rect')
      .attr({
          "height": 0,
          "y":height
      })
      .transition().duration(3000)
      .delay(function (d, i) { return i * 200; })
      // attributes can be also combined under one .attr
      .attr({
          "x": function (d) { return xScale(d.country); },
          "y": function (d) { return yScale(d.gdp); },
          "width": xScale.rangeBand(),
          "height": function (d) { return height - yScale(d.gdp); }
      })
      .style("fill", function (d, i) { return 'rgb(20, 20, ' + ((i * 30) + 100) + ')' });


    svg.selectAll('text')
        .data(data)
        .enter()
        .append('text')



        .text(function (d) {
            return d.gdp;
        })
        .attr({
            "x": function (d) { return xScale(d.country) + xScale.rangeBand() / 2; },
            "y": function (d) { return yScale(d.gdp) + 12; },
            "font-family": 'sans-serif',
            "font-size": '13px',
            "font-weight": 'bold',
            "fill": 'white',
            "text-anchor": 'middle'
        });

    // Draw xAxis and position the label
    svg.append("g").
        attr("class", "x axis").
        attr("transform", "translate(0," + height + ")").
        call(xAxis).
        selectAll("text").
        attr("dx", "-.8em").
        attr("dy", ".25em").
        attr("transform", "rotate(-60)").
        style("text-anchor", "end").
        attr("font-size", "10px");


    // Draw yAxis and postion the label
    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
        .attr("transform", "rotate(-90)")
        .attr("x", -height / 2)
        .attr("dy", "-3em")
        .style("text-anchor", "middle")
        .text("Trillions of US Dollars ($)");
});
//css file
svg {
  margin-left: auto;
  margin-right: auto;
  display: block;
}
.axis path,.axis line {
    fill:none;
    stroke:#000;
    shape-rendering:crispEdges;
}
.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
}
